// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// native_cpp_obj_fun_
double native_cpp_obj_fun_(std::string name, arma::vec& y_vec, arma::mat& x_mat, arma::vec& b_vec, double r_eff);
RcppExport SEXP _ncpen_native_cpp_obj_fun_(SEXP nameSEXP, SEXP y_vecSEXP, SEXP x_matSEXP, SEXP b_vecSEXP, SEXP r_effSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y_vec(y_vecSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_mat(x_matSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b_vec(b_vecSEXP);
    Rcpp::traits::input_parameter< double >::type r_eff(r_effSEXP);
    rcpp_result_gen = Rcpp::wrap(native_cpp_obj_fun_(name, y_vec, x_mat, b_vec, r_eff));
    return rcpp_result_gen;
END_RCPP
}
// native_cpp_obj_grad_fun_
arma::vec native_cpp_obj_grad_fun_(std::string name, arma::vec& y_vec, arma::mat& x_mat, arma::vec& b_vec, double r_eff);
RcppExport SEXP _ncpen_native_cpp_obj_grad_fun_(SEXP nameSEXP, SEXP y_vecSEXP, SEXP x_matSEXP, SEXP b_vecSEXP, SEXP r_effSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y_vec(y_vecSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_mat(x_matSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b_vec(b_vecSEXP);
    Rcpp::traits::input_parameter< double >::type r_eff(r_effSEXP);
    rcpp_result_gen = Rcpp::wrap(native_cpp_obj_grad_fun_(name, y_vec, x_mat, b_vec, r_eff));
    return rcpp_result_gen;
END_RCPP
}
// native_cpp_qlasso_fun_
Rcpp::List native_cpp_qlasso_fun_(arma::mat& q_mat, arma::vec& l_vec, arma::vec& b_vec0, arma::vec& w_vec, double lam, double iter_max, double b_eps, double k_eps, arma::uword p_eff, arma::uword q_rank);
RcppExport SEXP _ncpen_native_cpp_qlasso_fun_(SEXP q_matSEXP, SEXP l_vecSEXP, SEXP b_vec0SEXP, SEXP w_vecSEXP, SEXP lamSEXP, SEXP iter_maxSEXP, SEXP b_epsSEXP, SEXP k_epsSEXP, SEXP p_effSEXP, SEXP q_rankSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type q_mat(q_matSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type l_vec(l_vecSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b_vec0(b_vec0SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type w_vec(w_vecSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< double >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< double >::type b_eps(b_epsSEXP);
    Rcpp::traits::input_parameter< double >::type k_eps(k_epsSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type p_eff(p_effSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type q_rank(q_rankSEXP);
    rcpp_result_gen = Rcpp::wrap(native_cpp_qlasso_fun_(q_mat, l_vec, b_vec0, w_vec, lam, iter_max, b_eps, k_eps, p_eff, q_rank));
    return rcpp_result_gen;
END_RCPP
}
// native_cpp_p_ncpen_fun_
Rcpp::List native_cpp_p_ncpen_fun_(arma::vec& y_vec, arma::mat& x_mat, arma::vec& b_vec, arma::vec& w_vec, double lam, double gam, double tau, double iter_max, double b_eps, double k_eps, arma::uword p_eff, double r_eff, SEXP family, SEXP penalty);
RcppExport SEXP _ncpen_native_cpp_p_ncpen_fun_(SEXP y_vecSEXP, SEXP x_matSEXP, SEXP b_vecSEXP, SEXP w_vecSEXP, SEXP lamSEXP, SEXP gamSEXP, SEXP tauSEXP, SEXP iter_maxSEXP, SEXP b_epsSEXP, SEXP k_epsSEXP, SEXP p_effSEXP, SEXP r_effSEXP, SEXP familySEXP, SEXP penaltySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y_vec(y_vecSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_mat(x_matSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b_vec(b_vecSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type w_vec(w_vecSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< double >::type b_eps(b_epsSEXP);
    Rcpp::traits::input_parameter< double >::type k_eps(k_epsSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type p_eff(p_effSEXP);
    Rcpp::traits::input_parameter< double >::type r_eff(r_effSEXP);
    Rcpp::traits::input_parameter< SEXP >::type family(familySEXP);
    Rcpp::traits::input_parameter< SEXP >::type penalty(penaltySEXP);
    rcpp_result_gen = Rcpp::wrap(native_cpp_p_ncpen_fun_(y_vec, x_mat, b_vec, w_vec, lam, gam, tau, iter_max, b_eps, k_eps, p_eff, r_eff, family, penalty));
    return rcpp_result_gen;
END_RCPP
}
// native_cpp_ncpen_fun_
Rcpp::List native_cpp_ncpen_fun_(arma::vec& y_vec, arma::mat& x_mat0, bool x_std, bool intc, arma::vec& w_vec0, arma::vec& lam_vec0, double r_lam, double gam, double tau, arma::uword p_max, double iter_max, double b_eps, double k_eps, arma::uword p_eff, double r_eff, SEXP family, SEXP penalty);
RcppExport SEXP _ncpen_native_cpp_ncpen_fun_(SEXP y_vecSEXP, SEXP x_mat0SEXP, SEXP x_stdSEXP, SEXP intcSEXP, SEXP w_vec0SEXP, SEXP lam_vec0SEXP, SEXP r_lamSEXP, SEXP gamSEXP, SEXP tauSEXP, SEXP p_maxSEXP, SEXP iter_maxSEXP, SEXP b_epsSEXP, SEXP k_epsSEXP, SEXP p_effSEXP, SEXP r_effSEXP, SEXP familySEXP, SEXP penaltySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type y_vec(y_vecSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type x_mat0(x_mat0SEXP);
    Rcpp::traits::input_parameter< bool >::type x_std(x_stdSEXP);
    Rcpp::traits::input_parameter< bool >::type intc(intcSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type w_vec0(w_vec0SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type lam_vec0(lam_vec0SEXP);
    Rcpp::traits::input_parameter< double >::type r_lam(r_lamSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type p_max(p_maxSEXP);
    Rcpp::traits::input_parameter< double >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< double >::type b_eps(b_epsSEXP);
    Rcpp::traits::input_parameter< double >::type k_eps(k_epsSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type p_eff(p_effSEXP);
    Rcpp::traits::input_parameter< double >::type r_eff(r_effSEXP);
    Rcpp::traits::input_parameter< SEXP >::type family(familySEXP);
    Rcpp::traits::input_parameter< SEXP >::type penalty(penaltySEXP);
    rcpp_result_gen = Rcpp::wrap(native_cpp_ncpen_fun_(y_vec, x_mat0, x_std, intc, w_vec0, lam_vec0, r_lam, gam, tau, p_max, iter_max, b_eps, k_eps, p_eff, r_eff, family, penalty));
    return rcpp_result_gen;
END_RCPP
}
